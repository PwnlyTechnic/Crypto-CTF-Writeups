g1 = 201527
e1 = 170889198766265986594054717664789561344
p1 = 156920319682269547550840440422064789702830774969897260932124088315247211163110865017305817005797304213752612556763228047723789794713560055335007282974774888844332820576469678725018919853260647462367864702092052584778617621806467695299678199684012931325300660671488872927592192102428093535426026544017575524159
a1 = 149487841952747588106070346976004484066065895016918064204696247058119061554741530705085905723976501055498909092832058610177675891420269200781184130110986764623289893864930014158982791705565650689999251993360069827833690069334186086036528157206789003293998862601492326728199651838658908930802147366865434202266

assert a1 < p1

def bsgs(g, a, p):
    # To solve g^e mod p = a and find e
    m = ceil(sqrt(p-1))
    # Baby Step
    tb1 = {pow(g, i, p): i for i in range(m)}
    # Giant Step Precomputation c = g^(-m) mod p
    c = pow(g, m*(p-2), p)
    # Giant Step
    for j in range(m):
        x = (a*pow(c, j, p)) % p
        if x in tb1:
            return j*m + tb1[x]
    return None
print bsgs(g1, a1, p1)
